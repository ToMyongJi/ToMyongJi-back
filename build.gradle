plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

test {
	// 나중에 삭제하기
	ignoreFailures = true
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
		csv.required.set(false)
		html.required.set(true) // HTML 리포트 활성화
	}
	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, exclude: [
							'**/dto/**',           // DTO 제외
					])
				})
		)
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.0
			}
		}
	}
}

test.finalizedBy jacocoTestCoverageVerification

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.opencsv:opencsv:5.5'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.0.5'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'org.json:json:20230227'
	implementation 'com.google.code.gson:gson:2.8.8'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.0'

	runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.13.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.Final'

	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-jdbc'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.mapstruct:mapstruct:1.5.0.Final'

	//모니터링 의존성
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'


}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs '-Xshare:off' // JVM 아규먼트 설정
}



jar {
	enabled = false
}

