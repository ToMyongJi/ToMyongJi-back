name: CI/CD using GitHub Actions

on:
  push:
    branches: 
      - dev

permissions:  
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.properties
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Check application.properties contents
        run: |
          echo "${{ secrets.APPLICATION_PROPERTIES }}"

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Verify JAR File
        run: ls -l build/libs/

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tomyongji
          path: build/libs/tomyongji-SNAPSHOT.jar


  deploy:
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest
    needs: CI-CD
    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: tomyongji

      - name: Deploy to EC2 Instance
        run: |
          echo "$PRIVATE_KEY" > /tmp/tomyongji.pem
          chmod 600 /tmp/tomyongji.pem
          scp -i /tmp/tomyongji.pem -o StrictHostKeyChecking=no build/libs/tomyongji-SNAPSHOT.jar ubuntu@13.125.66.151:/home/ubuntu/
          
          ssh -i /tmp/tomyongji.pem -o StrictHostKeyChecking=no ubuntu@13.125.66.151 << 'EOF'
          pkill -f 'tomyongji-SNAPSHOT.jar' || true
          nohup java -jar /home/ubuntu/tomyongji-SNAPSHOT.jar > /dev/null 2>&1 &
          EOF
