services:
  app:
    image: eeeseohyun/tomyongji
    environment:
      - PORT=8080
    container_name: tomyongji_app
    ports:
      - "8080:8080"  # 컨테이너의 8080 포트를 호스트의 8080 포트와 연결
    networks:
      - app_network  # 여기서 'app_network'로 변경

  nginx:
    image: nginx:latest
    container_name: tomyongji-nginx
    ports:
      - "80:80"     # HTTP 포트
      - "443:443"   # HTTPS 포트
    volumes:
      - ./nginx/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - app_network  # 여기서 'app_network'로 변경

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - grafana-data:/grafana-data
    depends_on:
      - prometheus

  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    restart: always
    volumes:
      - ./loki-config.yml:/etc/loki/loki-config.yml
      - ./loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yml

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    ports:
      - "9080:9080"
    restart: always
    volumes:
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml
      - ./var/log/:/var/log
    command: -config.file=/etc/promtail/promtail-config.yml


  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

volumes:
  grafana-data:   # 이 부분을 추가하여 grafana 데이터 볼륨을 정의
  loki-data:
  prometheus-data:
    
networks:
  app_network:  # 사용자 정의 네트워크 정의
    driver: bridge
