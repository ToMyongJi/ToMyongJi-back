name: CI/CD using GitHub Actions & Docker

on:
  push:
    branches:
      - main

permissions:  
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Create application.properties
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Verify File Creation and Content
        run: |
          cd ./src/main/resources
          cat application.properties
        shell: bash

      - name: Docker build & push to prod
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tomyongji:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/tomyongji:latest

      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker ps
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/second-eyes-nginx
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tomyongji:latest
            sudo docker run -d --rm -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/tomyongji:latest
            sudo docker image prune -f
