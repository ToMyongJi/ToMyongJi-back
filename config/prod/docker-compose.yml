version: '2.4'

services:
  app:
    image: eeeseohyun/tomyongji:latest # main 환경 Docker ID
    container_name: tomyongji-app-prod
    ports:
      - "8080:8080"
    volumes:
      - /var/log/tomyongji:/var/log/tomyongji # 로그 파일 외부 저장
    restart: unless-stopped
    networks:
      - app_network

  nginx:
    image: eeeseohyun/tomyongji-nginx:latest # main 환경 Nginx 이미지
    container_name: tomyongji-nginx-prod
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for SSL certificate...';
        while ! test -f /etc/letsencrypt/live/api.tomyongji.com/fullchain.pem; do
          sleep 5;
        done;
        echo 'Certificate found! Starting Nginx...';
        nginx -g 'daemon off;'
      "
    networks:
      - app_network

  certbot: # dev와 동일하게 certbot 서비스 추가
    image: certbot/certbot
    container_name: tomyongji-certbot-prod
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done"
    restart: unless-stopped
    networks:
      - app_network

  # --- 모니터링 스택은 main 환경에만 포함 ---
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - grafana-data:/grafana-data
    depends_on:
      - prometheus
  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    restart: always
    volumes:
      - ./etc/loki/loki-config.yml:/etc/loki/loki-config.yml
      - ./loki-data:/tmp/loki
    command: -config.file=/etc/loki/loki-config.yml -config.expand-env=true
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    ports:
      - "9080:9080"
    restart: always
    volumes:
      - ./etc/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml
      - /var/log/:/var/log
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      - loki
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

networks:
  app_network:
    driver: bridge