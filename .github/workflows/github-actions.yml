name: CI/CD using GitHub Actions

on:
  push:
    branches:
      - dev

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.properties
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.DEV_APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Verify JAR File
        run: ls -l build/libs/

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tomyongji
          path: build/libs/*.jar  # 빌드된 모든 JAR 파일 업로드

  deploy:
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest
    needs: CI-CD
    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: tomyongji
          path: /tmp

      - name: Find Downloaded JAR
        run: ls -l /tmp

      - name: Deploy to EC2 Instance
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > /tmp/tomyongji.pem
          chmod 600 /tmp/tomyongji.pem

          # Find the most recent JAR file, excluding systemd and snap directories
          JAR_FILE=$(find /tmp -type f -name "*.jar" ! -path "/tmp/systemd-private*" ! -path "/tmp/snap-private*" -printf "%T+ %p\n" | sort -r | head -n 1 | awk '{print $2}')
          
          scp -i /tmp/tomyongji.pem -o StrictHostKeyChecking=no "$JAR_FILE" ubuntu@15.164.162.164:/home/ubuntu/
          
          ssh -i /tmp/tomyongji.pem -o StrictHostKeyChecking=no ubuntu@15.164.162.164 << 'EOF'
              pkill -f 'tomyongji-0.0.1-SNAPSHOT.jar' || true
          
              # 기존 스왑 비활성화 및 제거
              sudo swapoff -a || true
              sudo rm -f /swapfile || true
          
              # 새로운 스왑 파일 설정
              sudo fallocate -l 2G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
              echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab > /dev/null
          
              # 새로운 JAR 파일 실행
              nohup java -jar /home/ubuntu/tomyongji-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &
          EOF
