name: Dev CI/CD

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Spring Boot JAR
        run: ./gradlew clean bootJar

      - name: Build Docker image
        run: docker build -t ${{ secrets.DEV_DOCKER_USERNAME }}/tomyongji:latest .

      - name: Login to DockerHub
        run: echo ${{ secrets.DEV_DOCKER_PASSWORD }} | docker login -u ${{ secrets.DEV_DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DEV_DOCKER_USERNAME }}/tomyongji:latest

      - name: Ensure conf.d directory exists on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          script: mkdir -p /home/ubuntu/nginx-https/conf.d

      - name: Copy nginx.conf to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          source: nginx/conf.d/nginx.conf
          target: /home/ubuntu/nginx-https/conf.d/

      # ✅ EC2에 application.properties 생성
      - name: Create application.properties on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            echo "${{ secrets.DEV_APPLICATION_PROPERTIES }}" > /home/ubuntu/nginx-https/application.properties

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            cd ~/nginx-https
            docker pull ${{ secrets.DEV_DOCKER_USERNAME }}/tomyongji:latest
            docker-compose down
            docker-compose up -d


